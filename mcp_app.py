import json
import os

from mcp.server.fastmcp import FastMCP


custom_mcp_servers = {
    "SlackMCP": {
        "transport": "sse",
        "url": f"http://{os.environ.get('MCP_HOST')}:{os.environ.get('MCP_PORT')}/sse"
    }
}


mcp = FastMCP(
    "SlackMCP",
    host=os.environ.get("MCP_HOST"),
    port=os.environ.get("MCP_PORT")
)


def load_mcp_servers(custom_mcp_servers):
    with open("mcp-servers.json") as f:
        permanent_servers = json.load(f)

    mcp_servers = permanent_servers.get('mcpServers', {})
    mcp_servers.update(custom_mcp_servers)

    return mcp_servers


@mcp.tool()
def add_mcp_server(name: str, ip: str, port: str) -> str:
    """ 
    Add custom MCP server dynamically.

    Args:
        name: name of an MCP server. If not specified by user then autogenerated.
        ip: IP address or domain name of an MCP server endpoint
        port: port of an MCP server endpoint
    """
    custom_mcp_servers[name] = {
        "transport": "sse",
        "url": f"http://{ip}:{port}/sse"
    }
    return "added successfuly"


@mcp.tool()
def list_mcp_servers() -> str:
    """
    Return available MCP servers
    """
    return str(load_mcp_servers(custom_mcp_servers))


def run_mcp_app():
    mcp.run(transport='sse')
